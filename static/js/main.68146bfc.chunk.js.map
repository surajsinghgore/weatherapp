{"version":3,"sources":["Weather.js","App.js","index.js"],"names":["Weather","useState","newCity","input","newInput","newWeather","result","newResult","temp","newTemp","temps","newTemps","cityn","newCityn","country","newCountry","day","Date","toLocaleDateString","useEffect","a","url","fetch","response","json","jasondata","console","log","weather","main","name","sys","fetchapi","d","weekday","Array","n","getDay","dd","month","nn","getMonth","dddd","getDate","className","type","value","placeholder","onChange","e","target","onClick","aria-hidden","class","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"iQAqIeA,EA7HD,WAAK,IAAD,EAEGC,qBAFH,mBAENC,GAFM,aAGKD,mBAAS,cAHd,mBAGXE,EAHW,KAGLC,EAHK,OAIQH,qBAJR,mBAIJI,GAJI,aAKMJ,mBAAS,cALf,mBAKZK,EALY,KAKLC,EALK,OAMGN,qBANH,mBAMXO,EANW,KAMNC,EANM,OAOKR,qBAPL,mBAOXS,EAPW,KAOLC,EAPK,OAQKV,qBARL,mBAQXW,EARW,KAQLC,EARK,OASSZ,qBATT,mBASXa,EATW,KASHC,EATG,KAWZC,GAAI,IAAIC,MAAOC,mBAGrBC,qBAAU,YACQ,uCAAC,gCAAAC,EAAA,6DACLC,EADK,2DACmDf,EADnD,iEAGUgB,MAAMD,GAHhB,cAGLE,EAHK,gBAIGA,EAASC,OAJZ,OAIbC,EAJa,OAKnBC,QAAQC,IAAIF,GACJpB,EAAWoB,EAAUG,QAAQ,GAAGC,MAChC3B,EAAQuB,GACRhB,EAAQgB,EAAUI,KAAKrB,MACvBK,EAASY,EAAUK,MACnBf,EAAWU,EAAUM,IAAIjB,SACzBH,EAASc,EAAUG,QAAQ,GAAGC,MAXnB,4CAAD,qDAcdG,KACF,CAAC1B,IAIH,IAAI2B,EAAI,IAAIhB,KACRiB,EAAU,IAAIC,MAAM,GACxBD,EAAQ,GAAK,SACbA,EAAQ,GAAK,SACbA,EAAQ,GAAK,UACbA,EAAQ,GAAK,YACbA,EAAQ,GAAK,WACbA,EAAQ,GAAK,SACbA,EAAQ,GAAK,WAEb,IAAIE,EAAIF,EAAQD,EAAEI,UAGdC,EAAK,IAAIrB,KACTsB,EAAQ,IAAIJ,MAChBI,EAAM,GAAK,UACXA,EAAM,GAAK,WACXA,EAAM,GAAK,QACXA,EAAM,GAAK,QACXA,EAAM,GAAK,MACXA,EAAM,GAAK,OACXA,EAAM,GAAK,OACXA,EAAM,GAAK,SACXA,EAAM,GAAK,YACXA,EAAM,GAAK,UACXA,EAAM,IAAM,WACZA,EAAM,IAAM,WACZ,IAAIC,EAAKD,EAAMD,EAAGG,YAIdC,GADM,IAAIzB,MACD0B,UACT,OACI,qCACG,sBAAKC,UAAU,YAAf,UACH,uBAAOC,KAAK,OAAOC,MAAO3C,EAAO4C,YAAY,kBAAkBC,SAC3D,SAACC,GACG7C,EAAS6C,EAAEC,OAAOJ,UAG1B,wBAAQK,QACJ,WACI5C,EAAUJ,IAFlB,2BAOR,sBAAKyC,UAAU,OAAf,UAEA,sBAAKA,UAAU,aAAf,UACA,cAAC,IAAD,CAAUA,UAAU,cACpB,6BAAKzC,IACL,cAAC,IAAD,CAAcyC,UAAU,mBAIpB,sBAAKA,UAAU,OAAf,UACJ,+BAAKhC,EAAL,KAAcE,EAAd,OACA,+BAAKsB,EAAL,MAAWI,EAAX,IAAgBE,EAAhB,IAAuB1B,QAEvB,sBAAK4B,UAAU,MAAf,UACCpC,EADD,UAMA,sBAAKoC,UAAU,SAAf,UAEQ,UAAPlC,EAAiB,mBAAGkC,UAAU,cAAcQ,cAAY,SAAoB,SAAP1C,EAAgB,mBAAGkC,UAAU,cAAcQ,cAAY,SAAoB,QAAP1C,EAAe,mBAAGkC,UAAU,oBAAoBQ,cAAY,SAAc,mBAAGC,MAAM,qBAE7N,6BAEC3C,OAKD,sBAAKkC,UAAU,SAAf,UACA,iDACG,yDC/GYU,MARf,WACE,OACE,qBAAKV,UAAU,MAAf,SACC,cAAC,EAAD,OCCLW,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.68146bfc.chunk.js","sourcesContent":["import { useState ,useEffect} from 'react';\r\n\r\n// icons\r\nimport SettingsIcon from '@material-ui/icons/Settings';\r\nimport WbCloudyIcon from '@material-ui/icons/WbCloudy';\r\n\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\n\r\nconst Weather=()=>{\r\n\r\nconst [city,newCity]=useState();\r\nconst [input,newInput]=useState(\"chandigarh\");\r\nconst[weather,newWeather]=useState();\r\nconst[result,newResult]=useState(\"chandigarh\");\r\nconst [temp,newTemp]=useState();\r\nconst [temps,newTemps]=useState();\r\nconst [cityn,newCityn]=useState();\r\nconst [country,newCountry]=useState();\r\n\r\nconst day=new Date().toLocaleDateString;\r\n\r\n\r\nuseEffect(()=>{\r\n    const fetchapi=async()=>{\r\n        const url=`http://api.openweathermap.org/data/2.5/weather?q=${result}&units=metric&appid=81e9139aee341f35934fa3d450254c2f`;\r\n\r\n        const response=await fetch(url);\r\nconst jasondata=await response.json();\r\nconsole.log(jasondata);\r\n        newWeather(jasondata.weather[0].main);\r\n        newCity(jasondata)\r\n        newTemp(jasondata.main.temp);\r\n        newCityn(jasondata.name);\r\n        newCountry(jasondata.sys.country);\r\n        newTemps(jasondata.weather[0].main);\r\n    }\r\n    \r\n    fetchapi();\r\n},[result]);\r\n\r\n\r\n//day\r\nvar d = new Date();\r\nvar weekday = new Array(7);\r\nweekday[0] = \"Sunday\";\r\nweekday[1] = \"Monday\";\r\nweekday[2] = \"Tuesday\";\r\nweekday[3] = \"Wednesday\";\r\nweekday[4] = \"Thursday\";\r\nweekday[5] = \"Friday\";\r\nweekday[6] = \"Saturday\";\r\n\r\nvar n = weekday[d.getDay()];\r\n\r\n//month\r\nvar dd = new Date();\r\nvar month = new Array();\r\nmonth[0] = \"January\";\r\nmonth[1] = \"February\";\r\nmonth[2] = \"March\";\r\nmonth[3] = \"April\";\r\nmonth[4] = \"May\";\r\nmonth[5] = \"June\";\r\nmonth[6] = \"July\";\r\nmonth[7] = \"August\";\r\nmonth[8] = \"September\";\r\nmonth[9] = \"October\";\r\nmonth[10] = \"November\";\r\nmonth[11] = \"December\";\r\nvar nn = month[dd.getMonth()];\r\n\r\n//date\r\nvar ddd = new Date();\r\nvar dddd=ddd.getDate();\r\n    return(\r\n        <>\r\n           <div className=\"searchbar\">\r\n        <input type=\"text\" value={input} placeholder=\"Enter City Name\" onChange={\r\n            (e)=>{\r\n                newInput(e.target.value)\r\n            }\r\n        } />\r\n        <button onClick={\r\n            ()=>{\r\n                newResult(input)\r\n           \r\n            }\r\n        }>Click Here</button>\r\n        </div>\r\n<div className=\"main\">\r\n \r\n<div className=\"Topdetails\">\r\n<MenuIcon className=\"menuicons\"/>\r\n<h4>{input}</h4>\r\n<SettingsIcon className=\"settingicon\"/>\r\n</div>\r\n\r\n\r\n    <div className=\"tops\">\r\n<h2>{cityn}, {country} </h2>\r\n<h3>{n} , {nn} {dddd} {day}</h3>\r\n</div>\r\n<div className=\"deg\">\r\n{temp}Â°\r\n</div>\r\n\r\n\r\n\r\n<div className=\"status\">\r\n\r\n{temps=='Clouds'?(<i className=\"fa fa-cloud\" aria-hidden=\"true\"></i>):temps=='Clear'?(<i className=\"fa fa-sun-o\" aria-hidden=\"true\"></i>):temps=='Rain'?(<i className=\"fas fa-cloud-rain\" aria-hidden=\"true\"></i>):(<i class=\"fas fa-cloud-sun\"></i>)}\r\n\r\n<h1>\r\n\r\n{temps}\r\n\r\n</h1>\r\n</div>\r\n\r\n<div className=\"weakly\">\r\n<h2>Weekly forcaste</h2>\r\n   <p>Available Soon</p> \r\n</div>\r\n\r\n \r\n\r\n\r\n     </div>\r\n        </>\r\n      \r\n    )\r\n}\r\n\r\nexport default Weather;","import Weather from './Weather';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n     <Weather />\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}